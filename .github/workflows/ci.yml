name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: supabase/postgres:15.6.1.117
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: cozycoder_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    - name: Set up Elixir
      uses: erlef/setup-beam@5304e04ea2b355f03681464e683d92e3b2f18451
      with:
        elixir-version: '1.17.3'
        otp-version: '27'
    - name: Restore dependencies cache
      uses: actions/cache@v4
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install dependencies
      run: mix deps.get
    - name: Enforce formatting
      run: mix format --check-formatted
    - name: Run tests
      run: mix test

  build-image:

    name: Build ${{ matrix.env }} container image
    runs-on: ubuntu-latest

    strategy:
      matrix:
        env: [prod, ce]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.env }}
      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          build-args: |
            MIX_ENV=${{ matrix.env }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
